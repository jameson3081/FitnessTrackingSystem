<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('./partials/title.ejs') %>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/x-icon" href="/img/favicon.ico">

    <!--FONTS-->
    <link href='https://fonts.googleapis.com/css?family=Inter' rel='stylesheet'>
    <link href='https://fonts.googleapis.com/css?family=Merriweather' rel='stylesheet'>
    <link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <!--CSS FILE-->
    <link rel="stylesheet" href="fprofile.css">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <!--BOOTSTRAP REFERENCE-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
</head>


<body style = "background-color: #E5DDCB;">
    
    <!--- NAVIGATION BAR --->

        <div class="navbar">
                <p><a href = "/"><img src="img/logo.png" width="460" height="90" ></p></a>
                    <ul>
                        <strong>
                            <a href="/"><li>HOME</li></a>
                            <a href="/fprofile"><li style="color: #af241a">FITNESS PROFILE</li></a>
                            <a href="/flog"><li>FITNESS LOG</li></a>
                            <a href="/signIn"><li>ACCOUNT</li></a>
                        </strong>

                    </ul>
        </div>



    <!--Main Page Content-->

   

    <div id="student-links">
      <h2>List of Currently Available Fitness Profiles: (Click the names to view)</h2>
      <% if (data && data.length > 0) { %>
        <div class="flex-all">
          <div class="half">
            <select id="section-select">
              <option value="">SELECT SECTION</option>
              <% const sections = [...new Set(data.map(item => item.section))]; %>
              <% sections.forEach(function(section) { %>
                <option value="<%= section %>"><%= section %></option>
              <% }); %>
            </select>
          </div>  
          <div class="half">
            <select id="fitness-profile-select">
              <option value="/fprofile" selected>SELECT STUDENT</option>
              <% data.filter(item => item.type === 'Student').forEach(function(student) { %>
                <option value="/fprofile?decodedID=<%= student.idFromUser._id %>" data-section="<%= student.section %>"><%= student.fullname %></option>
              <% }); %>
            </select>
          </div>
        </div>
      <% } %>
    </div>
    

    
        <div id = "fprofile_box" class="wrapper">
            <h1 id = "fprofile_title">MY SMART FITNESS PROFILE</h1>
            <form id="fprofile-form">
                <label for="classNumber" id="classnumLabel">Class number:</label>
                <br>
                <input type="number" id = "classNumber" name = "classNumber" class = "centerAligned" placeholder=" - ENTER CLASS NUM -" value="<%= fprofile && fprofile.classNumber || '' %>" autocomplete="off">
                <br>
                <br>
                
                <label for="fullname" class = "fprofile_labels">Full Name:</label>
                <input type="text" id="fullname" name="fullname" class="centerAligned" placeholder="Surname, First Name M.I." value="<%= fprofile && fprofile.fullname || '' %>" autocomplete="off">
                
                <br>
                
                <label for="studentNumber" class = "fprofile_labels">Student Number:</label>
                <input type="number" id="studentNumber" name="studentNumber" class="centerAligned" placeholder="- Input student no. -" value="<%= fprofile && fprofile.studentNumber || '' %>" autocomplete="off">
               
          <br>
           <label for="dynamicSection" class = "fprofile_labels">Section:</label>
            <input type="text" id="dynamicSection" name="dynamicSection" class="centerAligned" placeholder="e.g. 2ISB" value="<%= fprofile && fprofile.dynamicSection || '' %>" autocomplete="off">

                <label for="notes" id="notesLabel">NOTES</label>
                <br>
                
                <div id="notes">
                    <p id="notesBody">
                    1. All White Fields are to be filled out.
                    <br>
                    2. All Fields in Yellow are Drop Down 
                    Buttons. Choose your answer from the menu.
                    <br>
                    3. There are indicators beside the fields 
                    that indicate if your inputs are either correct or incorrect.
                    These are automatically computed.
                    <br>
                    4. The goal is to get correct answers to 
                    those fields with indicators. Once the 
                    indicators show that you are correct, 
                    it means you will get full points for 
                    part 1 of the activity.
                    <br>
                    5. If your "Goal" is to "Maintain Weight",
                    please choose 0 in the "How much in Kg?" field.
                    <br>
                    6. Please make sure that you answer all the fields.

                </p>
                </div>
                <br>

  
               
                <br>
                <div id = "sexToBMR">
                <label for="sex" class = "fprofile_labels">Sex:   </label>
                <select name="sex" id="sex-options" class="combobox" onchange="bmrChecker()">
                  <option value="" <% if (!fprofile || !fprofile.sex) { %>selected<% } %>></option>
                  <option value="Male" <% if (fprofile && fprofile.sex === 'Male') { %>selected<% } %>>Male</option>
                  <option value="Female" <% if (fprofile && fprofile.sex === 'Female') { %>selected<% } %>>Female</option>
                  </select>
                <label for="BMI" class = "fprofile_labels" id = "bmilabel">BMI: </label>
                <input type="number" id = "bmi" name = "BMI" value="<%= fprofile && fprofile.bmi || '' %>" onchange="bmiChecker(); BMItranslation()" step="0.01" autocomplete="off" placeholder="e.g. 23.88">
                <span id="bmiCheck" class="check"></span>    
    
                <br>
                <label for="Age" class = "fprofile_labels">Age: </label>
                <input type="number" id = "age" name = "age" value="<%= fprofile && fprofile.age || '' %>" onchange="bmrChecker()" autocomplete="off" placeholder="e.g. 20">

                <label for="BMR" class = "fprofile_labels" id="bmrlabel">BMR: </label>
                <input type="number" id = "bmr" name = "BMR" value="<%= fprofile && fprofile.bmr || '' %>" onchange="bmrChecker(); goalKcals()" step="1" autocomplete="off" placeholder="e.g. 1646">
                <span id="bmrCheck" class="check"></span>  
                <br>
                </div>

                
                <label for="Height" class = "fprofile_labels" id = "heightlabel">Height (cm): </label>
                <input type="number" id = "Height" class = "heightweight" name = "Height" value="<%= fprofile && fprofile.height || '' %>" onchange="bmiChecker(); bmrChecker()" autocomplete="off" placeholder="e.g. 165">
                    
                <label for="actLevel" class = "fprofile_labels" id = actLevelLabel>Activity level:</label>
                <select name="actLevel" id="actLevel" class="combobox" onchange="goalKcals()">

                  <option value="" <% if (!fprofile || !fprofile.act) { %>selected<% } %>></option>
                  <option value="Little to no exercise" <% if (fprofile && fprofile.act === 'Little to no exercise') { %>selected<% } %>>Little to no exercise</option>
                  <option value="Lightly exercise (1-3 days a week)" <% if (fprofile && fprofile.act === 'Lightly exercise (1-3 days a week)') { %>selected<% } %>>Lightly exercise (1-3 days a week)</option>
                  <option value="Medium exercise (3-5 days a week)" <% if (fprofile && fprofile.act === 'Medium exercise (3-5 days a week)') { %>selected<% } %>>Medium exercise (3-5 days a week)</option>
                  <option value="Hard exercise (6-7 days a week)" <% if (fprofile && fprofile.act === 'Hard exercise (6-7 days a week)') { %>selected<% } %>>Hard exercise (6-7 days a week)</option>
                  <option value="Intense exercise/sports" <% if (fprofile && fprofile.act === 'Intense exercise/sports') { %>selected<% } %>>Intense exercise/sports</option>
                  </select>
                <br>
                
                <label for="Weight" class = "fprofile_labels" id = "weightlabel">Weight (kg): </label>
                <input type="number" id = "weight" class = "heightweight" name = "weight" value="<%= fprofile && fprofile.weight || '' %>" onchange="bmiChecker(); bmrChecker()" autocomplete="off" placeholder="e.g. 65"> 
                <br>
                
                <span id="translation">Translation: </span>

            
    

                <br>
                <br>
                <br>
                <br>
                
                <label for="goal" class = "fprofile_labels" id="goal_label">Goal: </label>
                <select name="goal" id="goal" class="combobox" onchange="goalKcals()">
                  <option value="" <% if (!fprofile || !fprofile.goal) { %>selected<% } %>></option>
                  <option value="Maintain weight" <% if (fprofile && fprofile.goal === 'Maintain weight') { %>selected<% } %>>Maintain weight</option>
                  <option value="Lose weight" <% if (fprofile && fprofile.goal === 'Lose weight') { %>selected<% } %>>Lose weight</option>
                  <option value="Gain weight" <% if (fprofile && fprofile.goal === 'Gain weight') { %>selected<% } %>>Gain weight</option>
                </select>
<br>
                <label for="howMuch" class = "fprofile_labels" id = "kglabel">How much in kg?: </label>
                <select name="howMuch" id="howMuch" class="combobox" onchange="goalKcals()">

                  <option value="" <% if (!fprofile || !fprofile.kg) { %>selected<% } %>></option>
                  <option value="0" <% if (fprofile && fprofile.kg === '0') { %>selected<% } %>>0</option>
                  <option value="1" <% if (fprofile && fprofile.kg === '1') { %>selected<% } %>>1</option>
                  <option value="2" <% if (fprofile && fprofile.kg === '2') { %>selected<% } %>>2</option>
                  <option value="3" <% if (fprofile && fprofile.kg === '3') { %>selected<% } %>>3</option>
                  <option value="4" <% if (fprofile && fprofile.kg === '4') { %>selected<% } %>>4</option>
                  <option value="5" <% if (fprofile && fprofile.kg === '5') { %>selected<% } %>>5</option>
                  <option value="6" <% if (fprofile && fprofile.kg === '6') { %>selected<% } %>>6</option>
                  <option value="7" <% if (fprofile && fprofile.kg === '7') { %>selected<% } %>>7</option>
                  <option value="8" <% if (fprofile && fprofile.kg === '8') { %>selected<% } %>>8</option>
                  <option value="9" <% if (fprofile && fprofile.kg === '9') { %>selected<% } %>>9</option>
                  <option value="10" <% if (fprofile && fprofile.kg === '10') { %>selected<% } %>>10</option>
                  <option value="11" <% if (fprofile && fprofile.kg === '11') { %>selected<% } %>>11</option>
                  <option value="12" <% if (fprofile && fprofile.kg === '12') { %>selected<% } %>>12</option>
                  <option value="13" <% if (fprofile && fprofile.kg === '13') { %>selected<% } %>>13</option>
                  <option value="14" <% if (fprofile && fprofile.kg === '14') { %>selected<% } %>>14</option>
                  <option value="15" <% if (fprofile && fprofile.kg === '15') { %>selected<% } %>>15</option>
                  <option value="16" <% if (fprofile && fprofile.kg === '16') { %>selected<% } %>>16</option>
                  <option value="17" <% if (fprofile && fprofile.kg === '17') { %>selected<% } %>>17</option>
                  <option value="18" <% if (fprofile && fprofile.kg === '18') { %>selected<% } %>>18</option>
                  <option value="19" <% if (fprofile && fprofile.kg === '19') { %>selected<% } %>>19</option>
                  <option value="20" <% if (fprofile && fprofile.kg === '20') { %>selected<% } %>>20</option>
                </select>

                <br>

                <label for="timeFrame" class = "fprofile_labels">Time frame (days): </label>
                <select name="timeFrame" id="timeFrame" class="combobox" onchange="goalKcals()">
                  <option value="" <% if (!fprofile || !fprofile.time) { %>selected<% } %>></option>
                  <option value="30" <% if (fprofile && fprofile.time === '30') { %>selected<% } %>>30</option>
                  <option value="60" <% if (fprofile && fprofile.time === '60') { %>selected<% } %>>60</option>
                  <option value="90" <% if (fprofile && fprofile.time === '90') { %>selected<% } %>>90</option>
                  
                </select>
                <br>
                <label for="goalKcal" class = "fprofile_labels">Goal kCal intake: </label>
                <input type="number"  onchange="goalKcals()" id="goalKcal" name="goalKcal" value="<%= fprofile && fprofile.goalKcal ? fprofile.goalKcal : '' %>" autocomplete="off">
                <span id="goalCheck" class="check"></span>  
                <br>

<!--                 <p class="fprofile_labels" id="goal_result">This is a good goal! 🙂</p>
 -->
               
                    <button type="submit" id ="saveButton" class="button"> </button>
            
                </form>
                

                
        </div>
    
      
        


    <!--BOOTSTRAP REFERENCE-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script>
        let allInp = document.querySelectorAll("input")
        let allSel = document.querySelectorAll("select")

    //Make all inputs readonly, when not logged in
    if (!localStorage.getItem("TOKEN")) {
        for (let i = 0; i < allInp.length; i++) {
        allInp[i].setAttribute('readonly', true)                                                       
        }

    for (let i = 0; i < allSel.length; i++) {
        allSel[i].setAttribute('disabled', true)
        }
    } else {

    }


    function goalKcals() {
      let bmr = document.getElementById("bmr").value
      let actLevel = document.getElementById("actLevel").value
      let goal = document.getElementById("goal").value
      let goalKcal = document.getElementById("goalKcal").value

      let kgGainLose = document.getElementById("howMuch").value
      let timeFrame = document.getElementById('timeFrame').value

      let goalCheck = document.getElementById("goalCheck")

      let little = bmr * 1.2
      let light = bmr * 1.375
      let medium = bmr * 1.55
      let hard = bmr * 1.725
      let intense = bmr * 1.9

    //Gain 1 kilo in 30 days, 1kg = 2.20462 * 3500 = 7,716.17 kCal / 30 = 257.21. Total = little + added = daily
   //                        let added = (kgGainLose * 2.20462) / timeFrame
   // let totalNeeded = little + added
      let added = ((kgGainLose * 2.20462) * (3500)) / timeFrame

      let totalNeedGainLittle = little + added
      let totalNeedGainLight = light + added
      let totalNeedGainMedium = medium + added
      let totalNeedGainHard = hard + added
      let totalNeedGainIntense = intense + added

      let totalNeedLoseLittle = little - added
      let totalNeedLoseLight = light - added
      let totalNeedLoseMedium = medium - added
      let totalNeedLoseHard = hard - added
      let totalNeedLoseIntense = intense - added

      if (goal === "Maintain weight" && actLevel === "Little to no exercise" && Math.floor(little) == goalKcal) {
       goalCheck.textContent = "Correct ✅";
        
      } else if (goal === "Maintain weight" && actLevel === "Lightly exercise (1-3 days a week)" && Math.floor(light) == goalKcal){
        goalCheck.textContent = "Correct ✅";

      } else if (goal === "Maintain weight" && actLevel === "Medium exercise (3-5 days a week)" && Math.floor(medium) == goalKcal){
        goalCheck.textContent = "Correct ✅";

      } else if (goal === "Maintain weight" && actLevel === "Hard exercise (6-7 days a week)" && Math.floor(hard) == goalKcal){
        goalCheck.textContent = "Correct ✅";
        
      } else if (goal === "Maintain weight" && actLevel === "Intense exercise/sports" && Math.floor(intense) == goalKcal){
        goalCheck.textContent = "Correct ✅";

      }


    //LOSE WEIGHT
    else if (goal === "Lose weight" && actLevel === "Little to no exercise" && goalKcal == Math.floor(totalNeedLoseLittle)){
        goalCheck.textContent = "Correct ✅"; 

      }
    else if (goal === "Lose weight" && actLevel === "Lightly exercise (1-3 days a week)" && goalKcal == Math.floor(totalNeedLoseLight)){
        goalCheck.textContent = "Correct ✅";

      } else if (goal === "Lose weight" && actLevel === "Medium exercise (3-5 days a week)" && goalKcal == Math.floor(totalNeedLoseMedium)){
        goalCheck.textContent = "Correct ✅";

      } else if (goal === "Lose weight" && actLevel === "Hard exercise (6-7 days a week)" && goalKcal == Math.floor(totalNeedLoseHard)){
        goalCheck.textContent = "Correct ✅";

      } else if (goal === "Lose weight" && actLevel === "Intense exercise/sports" && goalKcal == Math.floor(totalNeedLoseIntense)){
        goalCheck.textContent = "Correct ✅";
        
      }


      //GAIN WEIGHT
      else if (goal === "Gain weight" && actLevel === "Little to no exercise" && goalKcal == Math.floor(totalNeedGainLittle)){
        goalCheck.textContent = "Correct ✅"; 

      }
      else if (goal === "Gain weight" && actLevel === "Lightly exercise (1-3 days a week)" && goalKcal == Math.floor(totalNeedGainLight)){
        goalCheck.textContent = "Correct ✅";

      } else if (goal === "Gain weight" && actLevel === "Medium exercise (3-5 days a week)" && goalKcal == Math.floor(totalNeedGainMedium)){
        goalCheck.textContent = "Correct ✅";

      } else if (goal === "Gain weight" && actLevel === "Hard exercise (6-7 days a week)" && goalKcal == Math.floor(totalNeedGainHard)){
        goalCheck.textContent = "Correct ✅";

      } else if (goal === "Gain weight" && actLevel === "Intense exercise/sports" && goalKcal == Math.floor(totalNeedGainIntense)){
        goalCheck.textContent = "Correct ✅";
        
      } else {
        goalCheck.textContent = "Incorrect ❌"
      }
  

    }

    let bmrCorrectSymbol = document.getElementById('bmrCheck')
   
    let bmrVal = document.getElementById('bmr').value

    let sexUser = document.getElementById('sex-options').value
    let ageUser = document.getElementById('age').value
    let weightUser = document.getElementById('weight').value
    let heightUser = document.getElementById('Height').value

    let bmrMen = 66 + (13.7 * weightUser) + (5 * heightUser) - (6.8 * ageUser)
    let bmrMenRounded = bmrMen.toFixed(0)

    let bmrWomen = 447.593 + (9.247 * weightUser) + (3.098 * heightUser) - (4.330 * ageUser)
    let bmrWomenRounded = bmrWomen.toFixed(0)

    if (sexUser == "Male" && bmrMenRounded == bmrVal) {
      bmrCorrectSymbol.innerText = "Correct ✅"
    } else if (sexUser == "Female" && bmrWomenRounded == bmrVal) {
      bmrCorrectSymbol.innerText = "Correct ✅"
    } else {
      bmrCorrectSymbol.innerText = "Incorrect ❌"


    }

    let bmiCorrectSymbol = document.getElementById('bmiCheck')
    let bmiVal = document.getElementById('bmi').value

    let bmiFormula = weightUser / (heightUser/100) ** 2;
      let bmiRounded = bmiFormula.toFixed(2)
      
      
      if(bmiVal == bmiRounded) {
      bmiCorrectSymbol.innerText = "Correct ✅"
    } else {
      bmiCorrectSymbol.innerText = "Incorrect ❌"
    }
  

    function bmiChecker() {
      let bmiVal = document.getElementById('bmi').value

      let weightUser = document.getElementById('weight').value
      let heightUser = document.getElementById('Height').value
      let bmiFormula = weightUser / (heightUser/100) ** 2;
      let bmiRounded = bmiFormula.toFixed(2)
      
      
      if(bmiVal == bmiRounded) {
      bmiCorrectSymbol.innerText = "Correct ✅"
    } else {
      bmiCorrectSymbol.innerText = "Incorrect ❌"
    }
  }

  function bmrChecker() {
    let bmrVal = document.getElementById('bmr').value

    let sexUser = document.getElementById('sex-options').value
    let ageUser = document.getElementById('age').value
    let weightUser = document.getElementById('weight').value
    let heightUser = document.getElementById('Height').value

    let bmrMen = 66 + (13.7 * weightUser) + (5 * heightUser) - (6.8 * ageUser)
    let bmrMenRounded = bmrMen.toFixed(0)

    let bmrWomen = 655 + (9.6 * weightUser) + (1.8 * heightUser) - (4.7 * ageUser)
    let bmrWomenRounded = bmrWomen.toFixed(0)

    if (sexUser == "Male" && bmrMenRounded == bmrVal) {
      bmrCorrectSymbol.innerText = "Correct ✅"
    } else if (sexUser == "Female" && bmrWomenRounded == bmrVal) {
      bmrCorrectSymbol.innerText = "Correct ✅"
    } else {
      bmrCorrectSymbol.innerText = "Incorrect ❌"

    }
  }

  goalKcals()

function parseJwt2 (token2) { 
        var base64Url = token2.split('.')[1];
        var base64 = decodeURIComponent(atob(base64Url).split('').map(function(c) {
        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
    }).join(''));

        return JSON.parse(base64);
    }

    const token2 = localStorage.getItem("TOKEN");
let typeacc = token2 ? parseJwt2(token2).type : null;
const studentLinks = document.getElementById("student-links");

if (!token2) {
  studentLinks.style.display = "none";
} else if (typeacc === "Admin") {
  studentLinks.style.display = "block";
  document.getElementById('saveButton').style.display = "none"
  let formId = document.getElementById('fprofile-form')
  formId.onkeydown = function(event) {
    return event.key != 'Enter';
  }
} else {
  studentLinks.style.display = "none";
  
}

//Translation for BMI
BMItranslation()
  function BMItranslation() {
    let bmiVal = document.getElementById('bmi').value
    let translation = document.getElementById('translation')

    if (bmiVal < 18.5) {
      translation.textContent = "Translation: Underweight"
    } else if (bmiVal >= 18.5 && bmiVal <= 24.9 ) {
      translation.textContent = "Translation: Normal"
    } else if (bmiVal => 25 && bmiVal <= 29.9) {
      translation.textContent = "Translation: Overweight"
    } else if (bmiVal => 30) {
      translation.textContent = "Translation: Obese"
    } else {
      translation.textContent += " "
    }
  }



    const form = document.getElementById('fprofile-form')
    form.addEventListener('submit', sendProfileData)
  
    async function sendProfileData(event) {
        event.preventDefault()

        const classNumber = document.getElementById('classNumber').value
        const fullname = document.getElementById('fullname').value
        const studentNumber = document.getElementById('studentNumber').value
                
        const dynamicSection = document.getElementById('dynamicSection').value

        const age = document.getElementById('age').value
        const height = document.getElementById('Height').value
        const weight = document.getElementById('weight').value
        const bmi = document.getElementById('bmi').value
        const bmr = document.getElementById('bmr').value

        let sexOptions = document.getElementById("sex-options");
        let sex = sexOptions.value;

        let actOptions = document.getElementById("actLevel");
        let act = actOptions.value;

        let goalOptions = document.getElementById("goal");
        let goal = goalOptions.value;

        let timeOptions = document.getElementById("timeFrame");
        let time = timeOptions.value;


        let inKG = document.getElementById("howMuch");
        let kg = inKG.value

        const goalKcal = document.getElementById('goalKcal').value


        const lstoken = localStorage.getItem("TOKEN")

        function parseJwt (token) { 
        var base64Url = token.split('.')[1];
        var base64 = decodeURIComponent(atob(base64Url).split('').map(function(c) {
        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
    }).join(''));

    return JSON.parse(base64);
}

    let decodedID = parseJwt(localStorage.getItem("TOKEN")).id
    
        const result = await fetch('/fprofile', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            classNumber,
            fullname,
            studentNumber,
            dynamicSection,
            sex,
            age,
            height,
            weight,
            bmi,
            bmr,
            act,
            goal,
            time,
            kg,
            goalKcal,
            decodedID
          })
        }).then((res) => res.json())
        if (result.status === 'ok') {
          alert('Profile info submitted')
        } else {
          alert(JSON.stringify(result.error))
        }
      }


     
      function parseJwt (token) { 
        var base64Url = token.split('.')[1];
        var base64 = decodeURIComponent(atob(base64Url).split('').map(function(c) {
        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
    }).join(''));

        return JSON.parse(base64);
    }


 
//CHANGES URL

const token = localStorage.getItem("TOKEN");
const { id } = parseJwt(token);
const urlParams = new URLSearchParams(window.location.search);
const decodedID = urlParams.get('decodedID');




if (decodedID) {
  // Fetch data using decodedID
  fetch(`/fprofile?decodedID=${decodedID}`)
    .then(response => response.json())
    .then(data => {
      if (data.fprofile) {
      } else {
      }
    })
    .catch(error => console.error(error));
} else {
  // Redirect to the same URL with decodedID query string appended
  window.location.href = `/fprofile?decodedID=${id}`;
}



//LETS THE SELECTED ITEM IN THE DROPDOWN MENU STAY UPON RELOAD OF THE PAGE
document.addEventListener('DOMContentLoaded', function() {
  var selectEl = document.getElementById('fitness-profile-select');
  var selectedValue = sessionStorage.getItem('selectedValue');
  if (selectedValue) {
    selectEl.value = selectedValue;
  }

  selectEl.addEventListener('change', function() {
    var value = selectEl.value;
    if (value) {
      sessionStorage.setItem('selectedValue', value);
      window.location.href = value;
    }
  });

  var options = selectEl.options; // Set the selected attribute on the option element that matches the selected value
  for (var i = 0; i < options.length; i++) {
    if (options[i].value === selectedValue) {
      options[i].selected = true;
      break;
    }
  }
});


const sectionSelect = document.getElementById('section-select');
  const studentSelect = document.getElementById('fitness-profile-select');

  sectionSelect.addEventListener('change', function() {
    const selectedSection = sectionSelect.value;

    // Hide all students initially
    studentSelect.querySelectorAll('option').forEach(function(student) {
      student.style.display = 'none';
    });

    // Show students from selected section, or all students if no section selected
    studentSelect.querySelectorAll(`option[data-section="${selectedSection}"], option[value=""]`).forEach(function(student) {
      student.style.display = '';
    });
  });
    </script>
</body>
</html>